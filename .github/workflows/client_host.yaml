name: Client + Host
on:
  push:
    branches: [main]
  merge_group:
  pull_request:
env:
  CARGO_TERM_COLOR: always
jobs:
  host-client-offline-runs:
    name: ${{ matrix.target}} | ${{ matrix.name }}
    strategy:
      matrix:
        target: ["native", "asterisc"]
        name: ["OP Sepolia (Granite) - Block #16491249"]
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - uses: taiki-e/install-action@just
      - name: Install LLVM and Clang
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 19
          sudo apt-get install llvm-19 llvm-19-tools
      - name: Install Rust stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          prefix-key: ${{ matrix.target }}-${{ matrix.name }}
      - name: Log into ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Clone `asterisc` repository
        if: "!contains(matrix.target, 'native')"
        run: |
          git clone https://github.com/ethereum-optimism/asterisc.git
      - name: Setup Go toolchain
        if: "!contains(matrix.target, 'native')"
        uses: actions/setup-go@v5
        with:
          go-version: "1.21.6"
          cache-dependency-path: |
            asterisc/go.sum
      - name: Build `asterisc`
        if: "!contains(matrix.target, 'native')"
        run: |
          cd asterisc && git checkout v1.1.2 && make build-rvgo
          mv ./rvgo/bin/asterisc /usr/local/bin/
      - name: Set run environment
        run: |
          if [[ ${{ contains(matrix.name, 16491249) }} == true ]]; then
            BLOCK_NUMBER=16491249
            echo "BLOCK_NUMBER=$BLOCK_NUMBER" >> $GITHUB_ENV
            echo "L2_CLAIM=0x82da7204148ba4d8d59e587b6b3fdde5561dc31d9e726220f7974bf9f2158d75" >> $GITHUB_ENV
            echo "L2_OUTPUT_ROOT=0xa548f22e1aa590de7ed271e3eab5b66c6c3db9b8cb0e3f91618516ea9ececde4" >> $GITHUB_ENV
            echo "L2_HEAD=0x09b298a83baf4c2e3c6a2e355bb09e27e3fdca435080e8754f8749233d7333b2" >> $GITHUB_ENV
            echo "L1_HEAD=0x33a3e5721faa4dc6f25e75000d9810fd6c41320868f3befcc0c261a71da398e1" >> $GITHUB_ENV
            echo "L2_CHAIN_ID=11155420" >> $GITHUB_ENV
            echo "WITNESS_TAR_NAME=granite-op-sepolia-$BLOCK_NUMBER-witness.tar.zst" >> $GITHUB_ENV
          fi
      - name: Decompress witness data directory
        run: |
          tar --zstd -xvf ./bin/client/testdata/$WITNESS_TAR_NAME -C .
      - name: Run host + client offline
        working-directory: ./bin/client
        run: |
          export RUSTFLAGS="-C instrument-coverage"
          export LLVM_PROFILE_FILE="kona-%p-%m.profraw"

          mkdir -p ../../target
          just run-client-${{ matrix.target }}-offline \
            $BLOCK_NUMBER \
            $L2_CLAIM \
            $L2_OUTPUT_ROOT \
            $L2_HEAD \
            $L1_HEAD \
            $L2_CHAIN_ID
      - name: Convert profile to lcov
        run: |
          llvm-profdata-19 merge -sparse *.profraw -o coverage.profdata
          llvm-cov-19 export \
            -format=lcov ./target/debug/kona-host \
            -instr-profile=coverage.profdata > coverage.lcov
            # Filter out lines with "//" (comments) or "impl" (function declarations)
            grep -v -E '//$|impl' "coverage.lcov" > "filtered_coverage.lcov"
      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,RUST
          files: filtered_coverage.lcov
