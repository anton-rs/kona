name: Action Tests
on:
  push:
    branches: [main]
  merge_group:
  pull_request:
env:
  CARGO_TERM_COLOR: always
jobs:
  action-tests:
    name: FPP actions
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - uses: taiki-e/install-action@just
      - name: Install LLVM and Clang
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 19
          sudo apt-get install llvm-19 llvm-19-tools
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: Clone monorepo
        run: just monorepo
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Setup Go toolchain
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.7"
          cache-dependency-path: |
            monorepo/go.sum
      - name: Setup gotestsum
        uses: autero1/action-gotestsum@v2.0.0
        with:
          gotestsum_version: 1.12.0
      - name: Setup yq
        uses: dcarbone/install-yq-action@v1
      - name: Extract monorepo forge version
        id: collect-versions
        run: |
          echo "forge-version=$(yq '.tools.forge' monorepo/mise.toml | tr -d '\n')" >> $GITHUB_OUTPUT
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: ${{ steps.collect-versions.outputs.forge-version }}
      - name: Run Actions Tests
        run: |
          export RUSTFLAGS="-C instrument-coverage"
          export LLVM_PROFILE_FILE="kona-host-%p-%m.profraw"
          just action-tests
      - name: Convert profile to lcov
        run: |
          llvm-profdata-19 merge -sparse *.profraw -o coverage.profdata
          llvm-cov-19 export \
            -format=lcov ./target/debug/kona-host \
            -instr-profile=coverage.profdata > coverage.lcov
      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,RUST
          files: filtered_coverage.lcov
